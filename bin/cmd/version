#!/usr/bin/env bash

# =====================================================
# ðŸª¨ Rockury Common Runtime
# =====================================================

# Color definitions
if [ -t 1 ]; then
  BLACK="\033[30m"; RED="\033[31m"; GREEN="\033[32m"; YELLOW="\033[33m"
  BLUE="\033[34m"; MAGENTA="\033[35m"; CYAN="\033[36m"; WHITE="\033[37m"
  BRIGHT_BLACK="\033[90m"; BRIGHT_RED="\033[91m"; BRIGHT_GREEN="\033[92m"
  BRIGHT_YELLOW="\033[93m"; BRIGHT_BLUE="\033[94m"; BRIGHT_MAGENTA="\033[95m"
  BRIGHT_CYAN="\033[96m"; BRIGHT_WHITE="\033[97m"
  BOLD="\033[1m"; DIM="\033[2m"; ITALIC="\033[3m"; UNDERLINE="\033[4m"
  INVERT="\033[7m"
  BG_BRIGHT_GREEN="\033[102m"; BG_BRIGHT_BLUE="\033[104m"
  BG_BRIGHT_MAGENTA="\033[105m"; BG_BRIGHT_BLACK="\033[100m"
  RESET="\033[0m"
else
  BLACK=""; RED=""; GREEN=""; YELLOW=""; BLUE=""
  MAGENTA=""; CYAN=""; WHITE=""; BRIGHT_BLACK=""
  BRIGHT_RED=""; BRIGHT_GREEN=""; BRIGHT_YELLOW=""
  BRIGHT_BLUE=""; BRIGHT_MAGENTA=""; BRIGHT_CYAN=""
  BRIGHT_WHITE=""; BOLD=""; DIM=""; ITALIC=""
  UNDERLINE=""; INVERT=""; BG_BRIGHT_GREEN=""
  BG_BRIGHT_BLUE=""; BG_BRIGHT_MAGENTA=""
  BG_BRIGHT_BLACK=""; RESET=""
fi

# Required images
export PROTOC_IMAGE="rvolosatovs/protoc:latest"
export BUF_IMAGE="bufbuild/buf:latest"
export NODE_IMAGE="node:24"
export UV_IMAGE="ghcr.io/astral-sh/uv:python3.12-alpine"
export GO_IMAGE="golang:latest"
export JAVA_IMAGE="openjdk:25-slim"
export RSYNC_IMAGE="instrumentisto/rsync-ssh:latest"

# ----------------------------------------
# ðŸª¨ Rockery Banner
# ----------------------------------------
echo -e "${BRIGHT_RED}â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€${RESET}"
echo -e "${BRIGHT_CYAN}"
cat <<'EOF'
 ____   ___   ____ _  ___   _ ______   __
|  _ \ / _ \ / ___| |/ / | | |  _ \ \ / /
| |_) | | | | |   | ' /| | | | |_) \ V / 
|  _ <| |_| | |___| . \| |_| |  _ < | |  
|_| \_\\___/ \____|_|\_\\___/|_| \_\|_|  
                                         
EOF
echo -e "${RESET}"
echo -e "${BRIGHT_BLACK}â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€${RESET}"

# ----------------------------------------
# Image Info
# ----------------------------------------
echo -e "${BG_BRIGHT_GREEN}${BLACK}${BOLD} Protocol Buffers ${RESET} ${BRIGHT_WHITE}${PROTOC_IMAGE}${RESET}"
echo -e "${BG_BRIGHT_GREEN}${BLACK}${BOLD} Buf ${RESET} ${BRIGHT_WHITE}${BUF_IMAGE}${RESET}"
echo -e "${BG_BRIGHT_GREEN}${BLACK}${BOLD} Node ${RESET} ${BRIGHT_WHITE}${NODE_IMAGE}${RESET}"
echo -e "${BG_BRIGHT_GREEN}${BLACK}${BOLD} UV (Python) ${RESET} ${BRIGHT_WHITE}${UV_IMAGE}${RESET}"
echo -e "${BG_BRIGHT_GREEN}${BLACK}${BOLD} Golang ${RESET} ${BRIGHT_WHITE}${GO_IMAGE}${RESET}"
echo -e "${BG_BRIGHT_GREEN}${BLACK}${BOLD} Java ${RESET} ${BRIGHT_WHITE}${JAVA_IMAGE}${RESET}"

echo -e "${BRIGHT_RED}â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€${RESET}\n"